name: Integration
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
jobs:
  golangci-lint:
    name: Golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.2.1
          args: --config golangci.yml --timeout=5m ./...

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Golangci-lint for #${{ github.run_number }}"
          include-hidden-files: true
          path: reports/

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test
        run: mkdir -p reports

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install Tools
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go mod tidy

      - name: Test
        run: make test-race

      - name: Produce JUnit report
        run: go-junit-report <reports/coverage-dev.txt >reports/xunit.xml

      - name: reports/xunit.xml
        run: cat reports/xunit.xml

      - name: reports/coverage-dev.txt
        run: cat reports/coverage-dev.txt

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     files: reports/coverage-dev.txt
      #     flags: unit
      #     slug: aasanchez/ocpp16messages
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     verbose: true

      # - name: Upload JUnitReport to Codecov
      #   uses: codecov/test-results-action@v1
      #   with:
      #     flags: unit
      #     files: reports/xunit.xml
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     verbose: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Test for #${{ github.run_number }}"
          include-hidden-files: true
          path: reports/

  # build:
  #   name: Golangci-lint
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       go_version:
  #         - 1.23
  #         - 1.24
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: ${{ matrix.go_version }}

  #     - name: Build
  #       run: make build

  # build-image:
  #   name: Build Image for Deployment
  #   needs: ci
  #   runs-on: ubuntu-latest
  #   permissions: write-all
  #   env:
  #     DOCKER_IMAGE_NAME: ghcr.io/golang-venezuela/adan-bot
  #   steps:
  #     - name: Get source code
  #       uses: actions/checkout@v4

  #     - name: Login into Github Container Registry (a.k.a. ghcr.io)
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push Docker image to Github Container Registry ('latest')
  #       if: ${{ github.ref == 'refs/heads/main' }}
  #       run: |
  #         docker build . --tag $DOCKER_IMAGE_NAME:latest
  #         docker push $DOCKER_IMAGE_NAME:latest
